{"version":3,"sources":["api.js","firebaseConfig.js","TestFirebase.js","Header.js","SignedIn.js","quotesApi.js","Home.js","SignedOut.js","Main.js","About.js","Contact.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["baseURL","concat","textanalysis","text","axios","method","url","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseApp","firebase","firebaseConfig","firebaseAppAuth","auth","db","firestore","providers","googleProvider","GoogleAuthProvider","withFirebaseAuth","Header","react_default","a","createElement","Fragment","className","react_router_dom","to","SignedIn","props","src_Header_0","onClick","signOut","react_router","exact","path","render","user","displayName","onSubmit","parent","submitMyForm","onChange","handleChange","name","type","state","score_tag","react_apexcharts_min_default","key","series","data","length","options","width","align","quotesApi","get","Home","quoteText","_this2","this","then","res","setState","catch","console","log","src","alt","Component","SignedOut","signInWithGoogle","src_Home_0","Main","submit","chart","zoom","enabled","dataLabels","stroke","curve","title","style","color","fontSize","fontFamily","undefined","grid","row","colors","opacity","xaxis","categories","event","preventDefault","Date","_this","d","letterScore","copyOfResults","slice","scoreNum","push","collection","add","email","score_num","date","userInput","target","value","authView","_this$props","src_SignedIn_0","src_SignedOut","TestFirebase","About","Contact","placeholder","rows","cols","Footer","component","App","height","frameborder","allow","src_Main_0","src_Footer_0","Boolean","window","location","hostname","match","AppJsx","src_App_0","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.702c1026.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst apiKey = '573204e4bf7cf1e414ba77ad74f4a03f';\nconst baseURL = `https://api.meaningcloud.com/sentiment-2.1?key=${apiKey}&of=json&lang=en&txt=`;\n\nexport const textanalysis = (text) => {\n  return axios({\n     method: 'GET',\n     url: baseURL + text\n  })\n};\n\n","const config = {\n    apiKey: \"AIzaSyATVSam9LgPvvNfvlCRJtPhi1xwVV3BU7U\",\n    authDomain: \"sentiment-fc106.firebaseapp.com\",\n    databaseURL: \"https://sentiment-fc106.firebaseio.com\",\n    projectId: \"sentiment-fc106\",\n    storageBucket: \"\",\n    messagingSenderId: \"1074908166384\",\n    appId: \"1:1074908166384:web:788bde24d5956aee\"\n  };\n\n  export default config;","import React, {Component} from 'react';\nimport withFirebaseAuth from 'react-with-firebase-auth'\nimport firebaseConfig from './firebaseConfig';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport \"firebase/storage\";\nimport \"firebase/database\";\nimport \"firebase/firestore\";\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nconst firebaseAppAuth = firebaseApp.auth();\nconst db = firebaseApp.firestore();\n/*db.collection('users').add({name: 'Nona'});*/\nconst providers = {\n    googleProvider: new firebase.auth.GoogleAuthProvider(),\n};\n\n/*\nclass TestFirebase extends Component{\n    render(){\n        const {\n            user,\n            signOut,\n            signInWithGoogle,\n          } = this.props;\n        return(\n            <div>\n            <header>\n              {\n                user \n                  ? <p>Hello, {user.displayName}</p>\n                  : <p>Please sign in.</p>\n              }\n              {\n                user\n                  ? <button onClick={signOut}>Sign out</button>\n                  : <button onClick={signInWithGoogle}>Sign in with Google</button>\n              }\n            </header>\n          </div>\n        );\n    }\n}\n\nexport default withFirebaseAuth({\n    providers,\n    firebaseAppAuth,\n  })(TestFirebase)\n  ;*/\nexport default withFirebaseAuth;\nexport {firebaseAppAuth, providers, db};","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport './Header.css';\nconst Header = () => (\n    <React.Fragment>\n        <h1 className='titleH'>ONASA</h1><br/>\n        <Link className=\"navBtn\" to=\"/\">Home</Link>\n\n    </React.Fragment>\n) \n\n\nexport default Header;","import React from 'react';\nimport Chart from \"react-apexcharts\";\nimport Header from './Header';\nimport {Route} from 'react-router-dom';\nimport {Link} from \"react-router-dom\";\nimport './SignedIn.css'\n\nconst SignedIn = (props) => (\n        <div>\n          <Header />\n          <Link onClick={props.signOut} className=\"signout\" to=\"/\">Sign out</Link>\n          {/* <button onClick={props.signOut}>Sign out</button> */}\n          <hr/>\n          <Route exact path='/' render={()=>{ \n            return (\n              <React.Fragment>\n                <h1 className=\"yourd\">Your Dairy </h1>\n                <p>Hello, {props.user.displayName}</p>\n                <br />\n                <form   onSubmit={props.parent.submitMyForm}>\n                  <label className=\"diry\">How do you feel today? </label><br/>\n                  <input  className=\"feeling\" onChange={props.parent.handleChange} name='text' />\n        \n                  <br />\n                  <button className=\"save\" type=\"submit\">Save</button>\n                </form>\n                 <h5>Your Feeling</h5>\n                {props.parent.state.score_tag ?<h3 className=\"card\">{props.parent.state.score_tag}</h3> :\"\"}\n                <br />\n                {/* Today's Date :{Date()} */}\n                <div className=\"app\">\n                  <div className=\"row\">\n                    <div className=\"mixed-chart\">\n                      <Chart\n                        key={'chart-' + props.parent.state.series[0].data.length}\n                        options={props.parent.state.options}\n                        series={props.parent.state.series}\n                        type=\"line\"\n                        width=\"700\"\n                        align=\"center\"\n                      />\n        \n                    </div>\n                  </div>\n                </div>\n              </React.Fragment>\n            )\n          }}\n          />\n        </div>\n)\n\nexport default SignedIn;","import axios from \"axios\";\n\nexport const quotesApi = () => {\n  return axios.get(\n    `https://cors-anywhere.herokuapp.com/https://api.forismatic.com/api/1.0/?method=getQuote&lang=en&format=json&json?`\n  );\n};\n\n\n\nexport default quotesApi; //whole file\n","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport quotesApi from \"./quotesApi\";\n\nimport './Home.css';\n// import TestFirebase from './TestFirebase';\n\nclass Home extends Component{\n    state = {\n        quoteText: ''\n    }\n    componentDidMount() {\n        quotesApi()\n          .then(res => {\n            // console.log(res.data.quoteText);\n            this.setState({\n                quoteText: res.data.quoteText\n            })\n          })\n          .catch(() => {\n            console.log(\"err\");\n          });\n      }\n    render(){\n        return(\n            <div className=\"home-comp\">\n            <h3>{this.state.quoteText}</h3><br/>\n            <img src=\"https://im5.ezgif.com/tmp/ezgif-5-50543a332183.gif\" alt=\"\"/>\n           \n            </div>\n        )\n    }\n}\n\nexport default Home","import React from 'react';\nimport Header from './Header';\nimport {Route} from 'react-router-dom';\nimport Home from './Home';\nimport {Link} from \"react-router-dom\";\nconst SignedOut= (props) => (\n    <div>\n      <Header />\n     {/* <p> <button class=\"sign-in-with-google\" onClick={props.signInWithGoogle}>Sign in with Google</button></p> */}\n     <Link onClick={props.signInWithGoogle} className=\"sign-in-with-google\" to=\"/\">Sign in</Link>\n     <hr/>\n     <Route exact path='/' render={()=>{ \n            return (\n                <div>\n                      <Home />\n                </div>\n            )\n     }}\n     />\n    </div>\n  );\n\n  export default SignedOut;","import React, {Component} from 'react';\nimport { textanalysis } from \"./api\";\nimport './Main.css';\nimport TestFirebase from './TestFirebase';\nimport withFirebaseAuth, {providers, firebaseAppAuth, db} from './TestFirebase';\nimport SignedIn from './SignedIn';\nimport SignedOut from './SignedOut';\n\nclass Main extends Component {\n    state = {\n        text: \"\",\n        score_tag: \"\",\n        submit: false,\n        options: {\n          chart: {\n            zoom: {\n              enabled: true\n            }\n          },\n          dataLabels: {\n            enabled: true\n            \n          },\n          stroke: {\n            curve: \"straight\"\n          },\n          title: {\n            text: \"\",\n            align: \"center\",\n            style:{\n              color: \"#f3f3f3\",\n              fontSize: '20px',\n              fontFamily: undefined,\n            }\n          },\n          grid: {\n            row: {\n              colors: [\"#f3f3f3\", \"#f3f3f3\"], // takes an array which will be repeated on columns\n              opacity: 0.5\n            }\n          },\n          xaxis: {\n            categories: []\n          }\n        },\n        series: [\n          {\n            name: \"Desktops\",\n            data: []\n          }\n        ]\n        // testMode: {\n        //   text: '',\n        //   // score: 'P+ -> 2, P -> 1, N -> -1, NONE -> 0',\n        //   date: new Date().getFullYear\n        // }\n      };\n    \n      submitMyForm = event => {\n        event.preventDefault();\n        console.log(new Date());\n        textanalysis(this.state.text).then(d => {\n    \n          const letterScore = d.data.score_tag;\n    \n          const copyOfResults = this.state.series.slice()\n          let scoreNum = 0;\n          switch (letterScore) {\n            case \"P+\":\n    \n              copyOfResults[0].data.push(98)\n              scoreNum = 98;\n              break;\n    \n            case \"P\":\n              copyOfResults[0].data.push(80);\n              scoreNum = 80\n              break;\n            case \"N\":\n    \n              copyOfResults[0].data.push(50)\n              scoreNum = 50;\n              break;\n            case \"N+\":\n    \n              copyOfResults[0].data.push(20)\n              scoreNum = 20;\n              break;\n            case \"NONE\":\n    \n              copyOfResults[0].data.push(0)\n              scoreNum = 0;\n              break;\n            default:\n    \n          }\n          // console.log(this.state.series)\n          // console.log(copyOfResults)\n          db.collection('modes').add({\n            user: this.props.user.email,\n            text: this.state.text,\n            score_tag: letterScore,\n            score_num: scoreNum,\n            date: new Date(),\n    \n          });\n          this.setState({\n            score_tag: d.data.score_tag,\n            series: copyOfResults\n          });\n        })\n      };\n      handleChange = event => {\n        // this.state.submit = false;\n    \n    \n        const userInput = event.target.value;\n        // const inputName = event.target.name;\n    \n        this.setState({\n          text: userInput\n        });\n      };\n    \n    render() {\n        const { user, signOut, signInWithGoogle } = this.props;\n        let authView\n        if (user) {\n          authView = <SignedIn user={user} signOut={signOut} parent={this}/>\n        } else {\n          authView = <SignedOut signInWithGoogle={signInWithGoogle} />\n        }\n        return(\n            <header>  \n                <TestFirebase />\n                 {authView}\n            </header>\n        )\n    }\n}\n\nexport default withFirebaseAuth({\n    providers,\n    firebaseAppAuth,\n  })(Main);","import React from 'react';\nimport './About.css'\n\n\nconst About = () => (\n    <div className=\"about\">\n        <h1 className=\"aboutAdd\">About ONASA</h1>\n            <div className=\"pragraph\">\n        <h2 className=\"qut\"> <i> \"feelings can't be ignored, no matter how unjust or ungrateful they seem\" </i></h2>\n        <p> <span className=\"logo\">ONASA</span> is a speical application dedicated to analysing text and displaying how peopel feel.<br/>\n        This process is accomplished by simply asking how poeple feel and storing the input.\n        <br/>The graph is a reflection of how people who visited the application feel.<br/>\n         it demonstrate their mood and emotion in that particular moment. </p>\n         <br/>\n        <div className=\"team\">\n         <h3>Team member:</h3>\n         <h4> Omar , Nuwayyir , Asmaa , Saeed , Ahmed </h4>\n         \n         </div>\n\n        </div>\n    </div>\n)\n\nexport default About;","import React from \"react\";\nimport './Contact.css'\nconst Contact =()=>(\n \n      <div className=\"contact\">\n        <form className=\"feedback\">\n        <h1 className=\"title\"> Contact us </h1>\n          <label  >Name </label><br/>\n          <input className=\"form\" type=\"name\" placeholder =\"Your Name\"/>\n          <br />\n          <label>Email</label>\n          <input className=\"form\" type=\"email\" name=\"emailaddress\" placeholder=\"Email Address\" />\n          <br />\n          <label>Feedback</label>\n          <br />\n          <textarea className=\"form\" rows=\"4\" cols=\"50\" placeholder=\"We hope to know your opinion about our App\">\n          </textarea>\n          <br />\n\n          <button className='btnn' type=\"submit\" >Submit</button>\n        </form>\n  \n      </div>\n\n\n)\nexport default Contact;","import React, { Component } from \"react\";\nimport { Link, Route } from \"react-router-dom\";\nimport About from \"./About\";\nimport Contact from './Contact'\nimport './Footer.css';\n\nclass Footer extends Component {\n  render() {\n    return (\n      <div className=\"footer\">\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/contact\" component={Contact} />\n        <hr/>\n        <Link className=\"footerBtn\" to=\"/about\">About | </Link>\n        <Link className=\"footerBtn\" to=\"/contact\"> Contact</Link>\n        \n        <p className=\"copyright\"> Copyright &copy;2019 ONASA </p>\n\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","\nimport React,{Component} from 'react';\nimport Main from './Main'\nimport {Route} from 'react-router-dom'\nimport './App.css';\nimport Footer from './Footer';\n\nclass App extends Component {\n  \n  render(){\n\n    return (\n      <div className=\"App\">\n        <iframe width=\"0\" height=\"0\" src=\"https://www.youtube.com/embed/3NycM9lYdRI?autoplay=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"></iframe>\n        <Main />\n        <Footer />\n      </div>\n    );\n\n\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nconst AppJsx = (\n    <HashRouter>\n      <App />\n    </HashRouter>\n  )\nReactDOM.render(AppJsx, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}